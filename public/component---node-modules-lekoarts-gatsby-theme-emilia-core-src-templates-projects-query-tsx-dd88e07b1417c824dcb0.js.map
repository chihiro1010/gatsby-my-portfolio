{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-emilia/assets/location.tsx","webpack:///./src/@lekoarts/gatsby-theme-emilia/components/header.tsx","webpack:///./src/@lekoarts/gatsby-theme-emilia/components/projects.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia-core/src/templates/projects-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia/src/@lekoarts/gatsby-theme-emilia-core/components/projects.tsx"],"names":["Location","xmlns","viewBox","className","fill","d","Header","useEmiliaConfig","name","location","assetsPath","avatar","fadeUpProps","useSpring","config","slow","from","opacity","transform","to","fadeUpPropsDelay","delay","fadeProps","fadeLongProps","sx","textAlign","my","zIndex","div","style","overflow","borderRadius","height","width","display","boxShadow","file","childImageSharp","fixed","fontSize","position","top","left","right","p","backgroundColor","data-placeholder","h1","svg","color","mr","justifyContent","alignItems","data-testid","mt","mb","a","mx","Projects","projects","data","length","role","aria-label","href","gridTemplateColumns","gridColumnGap","map","project","index","val","allProject","nodes","parent","fields","colorThief","shadow","shadowArray","v","key","slug","item","overlay","inGrid","ProjectsComponent","query"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-projects-query-tsx-dd88e07b1417c824dcb0.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Location = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"icon-location-pin\">\r\n    <path\r\n      className=\"primary\"\r\n      fill=\"currentColor\"\r\n      d=\"M5.64 16.36a9 9 0 1 1 12.72 0l-5.65 5.66a1 1 0 0 1-1.42 0l-5.65-5.66zM12 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"\r\n    />\r\n    <path\r\n      className=\"secondary\"\r\n      fill=\"currentColor\"\r\n      d=\"M12 1a9 9 0 0 1 6.36 15.36l-5.65 5.66a1 1 0 0 1-.71.3V13a3 3 0 0 0 0-6V1z\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport default Location\r\n","/** @jsx jsx */\r\nimport { Header as ThemeHeader, jsx, Styled } from \"theme-ui\"\r\nimport { animated, useSpring, config } from \"react-spring\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport useEmiliaConfig from \"../hooks/use-emilia-config\"\r\nimport HeaderBackground from \"./header-background\"\r\nimport Location from \"../assets/location\"\r\nimport SocialMediaList from \"./social-media-list\"\r\n\r\nconst Header = () => {\r\n  const { name, location, assetsPath } = useEmiliaConfig()\r\n  const avatar = useStaticQuery(graphql`\r\n    query {\r\n      file(name: { eq: \"avatar\" }) {\r\n        childImageSharp {\r\n          fixed(width: 140, height: 140, quality: 100) {\r\n            ...GatsbyImageSharpFixed_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const fadeUpProps = useSpring({\r\n    config: config.slow,\r\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\r\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\r\n  })\r\n  const fadeUpPropsDelay = useSpring({\r\n    config: config.slow,\r\n    delay: 250,\r\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\r\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\r\n  })\r\n  const fadeProps = useSpring({ config: config.slow, from: { opacity: 0 }, to: { opacity: 1 } })\r\n  const fadeLongProps = useSpring({ config: config.slow, delay: 600, from: { opacity: 0 }, to: { opacity: 1 } })\r\n\r\n  return (\r\n    <ThemeHeader>\r\n      <HeaderBackground />\r\n      <div sx={{ textAlign: `center`, my: 5, zIndex: 10 }}>\r\n        <animated.div style={fadeProps}>\r\n          <div\r\n            sx={{\r\n              overflow: `hidden`,\r\n              borderRadius: `full`,\r\n              height: [`100px`, `140px`],\r\n              width: [`100px`, `140px`],\r\n              display: `inline-block`,\r\n              boxShadow: `lg`,\r\n              \"> div:not([data-placeholder='true'])\": {\r\n                height: [`100px !important`, `140px !important`],\r\n                width: [`100px !important`, `140px !important`],\r\n              },\r\n            }}\r\n          >\r\n            {avatar && avatar.file && avatar.file.childImageSharp ? (\r\n              <Img fixed={avatar.file.childImageSharp.fixed} />\r\n            ) : (\r\n              <div\r\n                sx={{\r\n                  fontSize: 0,\r\n                  position: `absolute`,\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: `100% !important`,\r\n                  right: 0,\r\n                  p: 3,\r\n                  backgroundColor: `red.2`,\r\n                }}\r\n                data-placeholder=\"true\"\r\n              >\r\n                Place an image with the name \"avatar\" inside the directory \"{assetsPath}\"\r\n              </div>\r\n            )}\r\n          </div>\r\n        </animated.div>\r\n        <animated.div style={fadeUpProps}>\r\n          <Styled.h1>{name}</Styled.h1>\r\n        </animated.div>\r\n        <animated.div style={fadeUpPropsDelay}>\r\n          <div\r\n            sx={{\r\n              svg: {\r\n                width: `20px`,\r\n                height: `20px`,\r\n                \".primary\": { color: `iconPrimary` },\r\n                \".secondary\": { color: `iconSecondary` },\r\n                mr: 2,\r\n              },\r\n              display: `flex`,\r\n              justifyContent: `center`,\r\n              alignItems: `center`,\r\n              color: `text`,\r\n            }}\r\n          >\r\n            <Location /> {location}\r\n          </div>\r\n        </animated.div>\r\n        <div data-testid=\"social-header\" sx={{ mt: 4, mb: 6, a: { mx: 2 } }}>\r\n          <animated.div style={fadeLongProps}>\r\n            <SocialMediaList />\r\n          </animated.div>\r\n        </div>\r\n      </div>\r\n    </ThemeHeader>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","/** @jsx jsx */\r\n/* eslint no-shadow: 0 */\r\nimport { jsx, Container, Styled, Main } from \"theme-ui\"\r\nimport { useSpring, animated, config } from \"react-spring\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { ChildImageSharp } from \"../types\"\r\nimport Layout from \"./layout\"\r\nimport Header from \"./header\"\r\nimport Card from \"./card\"\r\n\r\ntype Props = {\r\n  projects: {\r\n    slug: string\r\n    title: string\r\n    cover: ChildImageSharp\r\n  }[]\r\n}\r\n\r\nconst Projects = ({ projects }: Props) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allProject(sort: { fields: title }) {\r\n        nodes {\r\n          ... on MdxProject {\r\n            parent {\r\n              ... on Mdx {\r\n                fields {\r\n                  colorThief\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const fadeUpProps = useSpring({\r\n    config: config.slow,\r\n    delay: 600,\r\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\r\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\r\n  })\r\n\r\n  if (projects.length === 0) {\r\n    return (\r\n      <Layout>\r\n        <Header />\r\n        <Container>\r\n          <Styled.p>\r\n            Hi!{` `}\r\n            <span role=\"img\" aria-label=\"Wave emoji\">\r\n              👋\r\n            </span>\r\n            {` `}\r\n            <br />\r\n            Thanks for using <b>@lekoarts/gatsby-theme-emilia</b>. You currently don't have any content in your{` `}\r\n            <i>projects</i> folder - that's why this page displays a placeholder text. Head over to the{` `}\r\n            <Styled.a href=\"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-emilia\">\r\n              README\r\n            </Styled.a>\r\n            {` `}\r\n            to learn how to setup them.\r\n          </Styled.p>\r\n          <Styled.p>\r\n            <b>TL;DR:</b> <br />\r\n            The starter automatically created the folder <code>content/projects</code>. Go into this folder, create a\r\n            new folder called <code>example</code> and create an <code>index.mdx</code> file there and place an image.\r\n            Edit the frontmatter like described in the{` `}\r\n            <Styled.a href=\"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-emilia\">\r\n              README\r\n            </Styled.a>\r\n            .\r\n          </Styled.p>\r\n        </Container>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Header />\r\n      <Main>\r\n        <animated.div style={fadeUpProps}>\r\n          <Container\r\n            sx={{\r\n              mt: `-8rem`,\r\n              display: `grid`,\r\n              gridTemplateColumns: [`1fr`, `repeat(auto-fill, minmax(350px, 1fr))`],\r\n              gridColumnGap: 4,\r\n            }}\r\n          >\r\n            {projects.map((project, index) => {\r\n              const val = data.allProject.nodes[index].parent.fields.colorThief\r\n              const shadow = `${val[0]}, ${val[1]}, ${val[2]}`\r\n\r\n              const px = [`64px`, `32px`, `16px`, `8px`, `4px`]\r\n              const shadowArray = px.map(v => `rgba(${shadow}, 0.15) 0px ${v} ${v} 0px`)\r\n\r\n              return <Card key={project.slug} item={project} overlay={shadow} shadow={shadowArray} inGrid />\r\n            })}\r\n          </Container>\r\n        </animated.div>\r\n      </Main>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import { graphql } from \"gatsby\"\r\nimport ProjectsComponent from \"../components/projects\"\r\n\r\nexport default ProjectsComponent\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allProject(sort: { fields: title, order: DESC }) {\r\n      nodes {\r\n        slug\r\n        title\r\n        cover {\r\n          childImageSharp {\r\n            fluid(maxWidth: 770, quality: 95) {\r\n              ...GatsbyImageSharpFluid_withWebp\r\n              presentationHeight\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Projects from \"../../../components/projects\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allProject: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { allProject } = data\r\n\r\n  return <Projects projects={allProject.nodes} />\r\n}\r\n"],"sourceRoot":""}